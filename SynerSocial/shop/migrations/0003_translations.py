# Generated by Django 4.2.16 on 2024-11-29 17:32

from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

	dependencies = [
		('shop', '0002_alter_product_image'),
	]

	operations = [
		migrations.CreateModel(
			name='CategoryTranslation',
			fields=[
				('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
				('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
				('name', models.CharField(max_length=200)),
				('slug', models.SlugField(max_length=200, unique=True)),
			],
			options={
				'verbose_name': 'category Translation',
				'db_table': 'shop_category_translation',
				'db_tablespace': '',
				'managed': True,
				'default_permissions': (),
			},
			# https://learning.oreilly.com/library/view/django-5-by/9781805125457/Text/Chapter_11.xhtml#_idParaDest-325
			# This is a fix for a minor issue found in the django-parler version 
			# you are using. This change is necessary to prevent the migration 
			# from failing when applying it. This issue is related to creating 
			# translations for existing fields in the model and shall be fixed 
			# in newer django-parler versions.
			# bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
			bases=(parler.models.TranslatableModel, models.Model),
		),
		migrations.CreateModel(
			name='ProductTranslation',
			fields=[
				('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
				('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
				('name', models.CharField(max_length=200)),
				('slug', models.SlugField(max_length=200)),
				('description', models.TextField(blank=True)),
			],
			options={
				'verbose_name': 'product Translation',
				'db_table': 'shop_product_translation',
				'db_tablespace': '',
				'managed': True,
				'default_permissions': (),
			},
			# https://learning.oreilly.com/library/view/django-5-by/9781805125457/Text/Chapter_11.xhtml#_idParaDest-325
			# This is a fix for a minor issue found in the django-parler version 
			# you are using. This change is necessary to prevent the migration 
			# from failing when applying it. This issue is related to creating 
			# translations for existing fields in the model and shall be fixed 
			# in newer django-parler versions.
			# bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
			bases=(parler.models.TranslatableModel, models.Model),
		),
		migrations.AlterModelOptions(
			name='category',
			options={'verbose_name': 'category', 'verbose_name_plural': 'categories'},
		),
		migrations.AlterModelOptions(
			name='product',
			options={},
		),
		migrations.RemoveIndex(
			model_name='category',
			name='shop_catego_name_289c7e_idx',
		),
		migrations.RemoveIndex(
			model_name='product',
			name='shop_produc_id_f21274_idx',
		),
		migrations.RemoveIndex(
			model_name='product',
			name='shop_produc_name_a2070e_idx',
		),
		migrations.RemoveField(
			model_name='category',
			name='name',
		),
		migrations.RemoveField(
			model_name='category',
			name='slug',
		),
		migrations.RemoveField(
			model_name='product',
			name='description',
		),
		migrations.RemoveField(
			model_name='product',
			name='name',
		),
		migrations.RemoveField(
			model_name='product',
			name='slug',
		),
		migrations.AddField(
			model_name='producttranslation',
			name='master',
			field=parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shop.product'),
		),
		migrations.AddField(
			model_name='categorytranslation',
			name='master',
			field=parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='shop.category'),
		),
		migrations.AlterUniqueTogether(
			name='producttranslation',
			unique_together={('language_code', 'master')},
		),
		migrations.AlterUniqueTogether(
			name='categorytranslation',
			unique_together={('language_code', 'master')},
		),
	]
